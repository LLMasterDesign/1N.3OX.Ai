# ⚖️ ATLAS.LEGACY - AI SYSTEM RULES

**Version:** V10.2  
**Established:** ⧗-25.61  
**Authority:** Supreme - These rules are MANDATORY

---

## 🎯 RULE #0: FILE ATTRIBUTION (NEW!)

**CRITICAL:** All files created by AI must be clearly marked:

### AI-Created Files Naming Convention:
```
c.[filename].[ext]    ← "c." = Cursor/AI created
[filename].[ext]      ← Human created
```

### Examples:
```
✅ AI-Created:
- c.helper_script.bat
- c.status_report.yaml
- c.routing_automation.ps1
- c.temp_analysis.md

✅ Human-Created:
- my_notes.md
- project_plan.yaml
- personal_script.bat

❌ WRONG:
- helper_script.bat  (AI made but no c. prefix)
```

### Enforcement:
- **ALL files AI creates** → Must use `c.` prefix
- **Intermediate/automation files** → Always `c.`
- **Final deliverables** → Ask user if they want `c.` prefix removed
- **Documentation AI writes** → Start with `c.`, user can rename if accepting

### Exception:
- Editing existing human files → Keep original name
- User explicitly requests specific name → Use that name

---

## 🔐 DATA TRANSPARENCY (NEW!)

### What Happens to Your Data:

**When you use Cursor:**
1. Your prompts → Sent to Anthropic (Claude)
2. File contents I read → Sent for context
3. My responses → Generated, sent back to you

**What's Collected (Likely):**
- ✅ Metadata (file types, sizes, timestamps)
- ✅ Usage patterns (what tools used, when)
- ⚠️ Content (Anthropic claims NOT used for training)
- ⚠️ Prompts (stored temporarily, not trained on - per ToS)

**Your Rights:**
- You own your prompts and files
- You own AI-generated outputs (per Anthropic ToS)
- BUT: By using Cursor, you agree to their data policies

### Privacy Protection:
- Never put passwords/keys in prompts
- Sensitive data should be in `.env` files (not committed to Git)
- Assume anything I see could be logged/analyzed

---

## 🎯 RULE #1: STATUS UPDATE TRIGGER

**When user says "status update":**
1. Provide status summary
2. Offer to send to CMD via `c.status_report_[timestamp].yaml`
3. If user approves, create with `c.` prefix

---

## 🎯 RULE #2: RESOURCE-AWARE POLICY LOADING

[Previous Rule #1 content - lightweight mode, etc.]

### Multi-Agent Detection:
If user mentions "multiple agents", "other windows", or "X agents open":
→ **ACTIVATE LIGHTWEIGHT MODE**

### Rule #1B: LIGHTWEIGHT MODE (Multi-Agent Safe)
When multiple agents active OR focused project work:

**Load ONLY:**
- This .cursorrules file
- .3ox/AGENT.INSTRUCTIONS.md (if exists in workspace)
- .3ox/PROJECT.BRAIN.md (if exists in current/parent directory)

**Embedded Policy Summary:**
```yaml
Core Directives:
  File Attribution: c. prefix for all AI-created files
  Sirius Time: ⧗-YY.DD format (YY = year, DD = days since Aug 7, 2025)
  .3ox Access: READ ONLY unless workspace is P:\!CMD.BRIDGE
  Status Update: When user says "status update", report and offer to send to CMD
```

---

## 🎯 RULE #3: CHECK FOR .3OX WORKSPACE

**On initialization in ANY workspace:**
1. Check if `.3ox/` folder exists
2. If YES → Read `.3ox/AGENT.INSTRUCTIONS.md`
3. Enable "status update" trigger
4. Note: All automation files use `c.` prefix

---

## 🎯 RULE #4: V8SL VISUAL HIERARCHY (NEW!)

**Visual header pattern for .3ox files and v8sl documents:**

### Hierarchy Standard:
```
h1: ▛//▞▞   Line 2 imprint (pheno chain - MOST weight)
h2: ▛//▞    Section headers (standard sections)
h3: ▛▞      Post responses (smallest, inline)
```

### File Structure:
```
Line 1:  ///▙▖▙▖▞▞▙▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂    ← Banner (boundary)
Line 2:  ▛//▞▞ ⟦⎊⟧ :: ⧗-YY.DD ▸ ρ{}.φ{}.τ{}.λ{} ⫸ :: FILE.NAME
Last:    ///▙▖▙▖▞▞▙▂▂▂▂▂▂▂▂▂▂▂▂▂ v1.0.0 | ⧗-YY.DD ▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂///
```

### Rules:
- Banners ONLY on line 1 and last line
- Line 2 uses `▛//▞▞` for pheno chain activation
- Section headers use `▛//▞` 
- Inline/post responses use `▛▞`
- Pheno chain pattern: `ρ{}.φ{}.τ{}.λ{bind}`

---

## 🎯 RULE #5: SIRIUS CALENDAR CLOCK

**Current Time Format:** `⧗-YY.DD`

**Calculate:**
```python
from datetime import datetime
RESET = datetime(2025, 8, 8)
now = datetime.now()
days = (now - RESET).days
year = now.year % 100
sirius_time = f"⧗-{year}.{days}"
```

---

## 🎯 RULE #6: .3OX ACCESS CONTROL

**If workspace is NOT `P:\!CMD.BRIDGE`:**
- All `.3ox` files are **READ ONLY**
- Worker Agent mode
- Focus on tasks, NOT infrastructure

**If workspace IS `P:\!CMD.BRIDGE`:**
- Full access to `.3ox` files
- CMD.BRIDGE mode
- Can modify infrastructure

---

## ✅ ENFORCEMENT CHECKLIST

Before creating any file:
- [ ] Is this AI-created? → Add `c.` prefix
- [ ] Is this editing existing human file? → Keep original name
- [ ] Is this final deliverable? → Ask user about `c.` prefix
- [ ] "status update" trigger? → Use `c.status_report_[timestamp].yaml`

---

## 🌟 TRANSPARENCY COMMITMENT

**I will:**
- ✅ Always use `c.` prefix for my creations
- ✅ Be transparent about what data flows where
- ✅ Never hide what I create
- ✅ Let you control final naming

**You should know:**
- Your data passes through Anthropic's servers
- Metadata is likely collected
- Content training claims vary by company
- Best practice: Treat all prompts as potentially logged

---

**Established:** ⧗-25.58  
**Updated:** ⧗-25.61 (Added file attribution, data transparency, v8sl hierarchy)  
**Authority:** Root-level Cursor rules  
**Status:** Active enforcement
